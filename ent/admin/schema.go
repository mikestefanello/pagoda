// Code generated by ent, DO NOT EDIT.
package admin

import (
	"entgo.io/ent/schema/field"
)

type EntitySchema struct {
	Name   string
	Fields []FieldSchema
}

type Enum struct {
	Label, Value string
}

type FieldSchema struct {
	Name      string
	Type      field.Type
	Optional  bool
	Immutable bool
	Sensitive bool
	Enums     []Enum
}

var schema = []*EntitySchema{
	{
		Name: "PasswordToken",
		Fields: []FieldSchema{
			{
				Name:      "token",
				Type:      field.TypeString,
				Optional:  false,
				Immutable: false,
				Sensitive: true,
				Enums:     nil,
			},
			{
				Name:      "user_id",
				Type:      field.TypeInt,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
			{
				Name:      "created_at",
				Type:      field.TypeTime,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
		},
	},

	{
		Name: "User",
		Fields: []FieldSchema{
			{
				Name:      "name",
				Type:      field.TypeString,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
			{
				Name:      "email",
				Type:      field.TypeString,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
			{
				Name:      "password",
				Type:      field.TypeString,
				Optional:  false,
				Immutable: false,
				Sensitive: true,
				Enums:     nil,
			},
			{
				Name:      "verified",
				Type:      field.TypeBool,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
			{
				Name:      "admin",
				Type:      field.TypeBool,
				Optional:  false,
				Immutable: false,
				Sensitive: false,
				Enums:     nil,
			},
			{
				Name:      "created_at",
				Type:      field.TypeTime,
				Optional:  false,
				Immutable: true,
				Sensitive: false,
				Enums:     nil,
			},
		},
	},
}

func GetSchema() []*EntitySchema {
	return schema
}
