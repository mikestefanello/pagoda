// Code generated by ent, DO NOT EDIT.
package admin

import (
	"entgo.io/ent/schema/field"
)

type Enum struct {
	Label, Value string
}

type FieldSchema struct {
	Name      string
	Type      field.Type
	Optional  bool
	Immutable bool
	Sensitive bool
	Enums     []string
}

const NamePasswordToken = "PasswordToken"

var fieldsPasswordToken = []*FieldSchema{
	{
		Name:      "token",
		Type:      field.TypeString,
		Optional:  false,
		Immutable: false,
		Sensitive: true,
		Enums:     nil,
	},
	{
		Name:      "user_id",
		Type:      field.TypeInt,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
	{
		Name:      "created_at",
		Type:      field.TypeTime,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
}

const NameUser = "User"

var fieldsUser = []*FieldSchema{
	{
		Name:      "name",
		Type:      field.TypeString,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
	{
		Name:      "email",
		Type:      field.TypeString,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
	{
		Name:      "password",
		Type:      field.TypeString,
		Optional:  false,
		Immutable: false,
		Sensitive: true,
		Enums:     nil,
	},
	{
		Name:      "verified",
		Type:      field.TypeBool,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
	{
		Name:      "admin",
		Type:      field.TypeBool,
		Optional:  false,
		Immutable: false,
		Sensitive: false,
		Enums:     nil,
	},
	{
		Name:      "created_at",
		Type:      field.TypeTime,
		Optional:  false,
		Immutable: true,
		Sensitive: false,
		Enums:     nil,
	},
}
