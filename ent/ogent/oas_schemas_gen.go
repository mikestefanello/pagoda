// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
)

type CreatePasswordTokenReq struct {
	Hash      string    `form:"hash"`
	CreatedAt time.Time `form:"created_at"`
	User      int       `form:"user"`
}

// GetHash returns the value of Hash.
func (s *CreatePasswordTokenReq) GetHash() string {
	return s.Hash
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreatePasswordTokenReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUser returns the value of User.
func (s *CreatePasswordTokenReq) GetUser() int {
	return s.User
}

// SetHash sets the value of Hash.
func (s *CreatePasswordTokenReq) SetHash(val string) {
	s.Hash = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreatePasswordTokenReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUser sets the value of User.
func (s *CreatePasswordTokenReq) SetUser(val int) {
	s.User = val
}

type CreateUserReq struct {
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Password  string    `form:"password"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
	Owner     []int     `form:"owner"`
}

// GetName returns the value of Name.
func (s *CreateUserReq) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *CreateUserReq) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CreateUserReq) GetPassword() string {
	return s.Password
}

// GetVerified returns the value of Verified.
func (s *CreateUserReq) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *CreateUserReq) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetOwner returns the value of Owner.
func (s *CreateUserReq) GetOwner() []int {
	return s.Owner
}

// SetName sets the value of Name.
func (s *CreateUserReq) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *CreateUserReq) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CreateUserReq) SetPassword(val string) {
	s.Password = val
}

// SetVerified sets the value of Verified.
func (s *CreateUserReq) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *CreateUserReq) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetOwner sets the value of Owner.
func (s *CreateUserReq) SetOwner(val []int) {
	s.Owner = val
}

// DeletePasswordTokenNoContent is response for DeletePasswordToken operation.
type DeletePasswordTokenNoContent struct{}

func (*DeletePasswordTokenNoContent) deletePasswordTokenRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

type ListPasswordTokenOKApplicationJSON []PasswordTokenList

func (*ListPasswordTokenOKApplicationJSON) listPasswordTokenRes() {}

type ListUserOKApplicationJSON []UserList

func (*ListUserOKApplicationJSON) listUserRes() {}

type ListUserOwnerOKApplicationJSON []UserOwnerList

func (*ListUserOwnerOKApplicationJSON) listUserOwnerRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PasswordTokenCreate
type PasswordTokenCreate struct {
	ID        int       `form:"id"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *PasswordTokenCreate) GetID() int {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasswordTokenCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *PasswordTokenCreate) SetID(val int) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasswordTokenCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*PasswordTokenCreate) createPasswordTokenRes() {}

// Ref: #/components/schemas/PasswordTokenList
type PasswordTokenList struct {
	ID        int       `form:"id"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *PasswordTokenList) GetID() int {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasswordTokenList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *PasswordTokenList) SetID(val int) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasswordTokenList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/PasswordTokenRead
type PasswordTokenRead struct {
	ID        int       `form:"id"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *PasswordTokenRead) GetID() int {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasswordTokenRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *PasswordTokenRead) SetID(val int) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasswordTokenRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*PasswordTokenRead) readPasswordTokenRes() {}

// Ref: #/components/schemas/PasswordTokenUpdate
type PasswordTokenUpdate struct {
	ID        int       `form:"id"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *PasswordTokenUpdate) GetID() int {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasswordTokenUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *PasswordTokenUpdate) SetID(val int) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasswordTokenUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*PasswordTokenUpdate) updatePasswordTokenRes() {}

// Ref: #/components/schemas/PasswordToken_UserRead
type PasswordTokenUserRead struct {
	ID        int       `form:"id"`
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *PasswordTokenUserRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *PasswordTokenUserRead) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *PasswordTokenUserRead) GetEmail() string {
	return s.Email
}

// GetVerified returns the value of Verified.
func (s *PasswordTokenUserRead) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *PasswordTokenUserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *PasswordTokenUserRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *PasswordTokenUserRead) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *PasswordTokenUserRead) SetEmail(val string) {
	s.Email = val
}

// SetVerified sets the value of Verified.
func (s *PasswordTokenUserRead) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *PasswordTokenUserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*PasswordTokenUserRead) readPasswordTokenUserRes() {}

type R400 struct {
	Code   int    `form:"code"`
	Status string `form:"status"`
	Errors jx.Raw `form:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createPasswordTokenRes()   {}
func (*R400) createUserRes()            {}
func (*R400) deletePasswordTokenRes()   {}
func (*R400) deleteUserRes()            {}
func (*R400) listPasswordTokenRes()     {}
func (*R400) listUserOwnerRes()         {}
func (*R400) listUserRes()              {}
func (*R400) readPasswordTokenRes()     {}
func (*R400) readPasswordTokenUserRes() {}
func (*R400) readUserRes()              {}
func (*R400) updatePasswordTokenRes()   {}
func (*R400) updateUserRes()            {}

type R404 struct {
	Code   int    `form:"code"`
	Status string `form:"status"`
	Errors jx.Raw `form:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deletePasswordTokenRes()   {}
func (*R404) deleteUserRes()            {}
func (*R404) listPasswordTokenRes()     {}
func (*R404) listUserOwnerRes()         {}
func (*R404) listUserRes()              {}
func (*R404) readPasswordTokenRes()     {}
func (*R404) readPasswordTokenUserRes() {}
func (*R404) readUserRes()              {}
func (*R404) updatePasswordTokenRes()   {}
func (*R404) updateUserRes()            {}

type R409 struct {
	Code   int    `form:"code"`
	Status string `form:"status"`
	Errors jx.Raw `form:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createPasswordTokenRes()   {}
func (*R409) createUserRes()            {}
func (*R409) deletePasswordTokenRes()   {}
func (*R409) deleteUserRes()            {}
func (*R409) listPasswordTokenRes()     {}
func (*R409) listUserOwnerRes()         {}
func (*R409) listUserRes()              {}
func (*R409) readPasswordTokenRes()     {}
func (*R409) readPasswordTokenUserRes() {}
func (*R409) readUserRes()              {}
func (*R409) updatePasswordTokenRes()   {}
func (*R409) updateUserRes()            {}

type R500 struct {
	Code   int    `form:"code"`
	Status string `form:"status"`
	Errors jx.Raw `form:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createPasswordTokenRes()   {}
func (*R500) createUserRes()            {}
func (*R500) deletePasswordTokenRes()   {}
func (*R500) deleteUserRes()            {}
func (*R500) listPasswordTokenRes()     {}
func (*R500) listUserOwnerRes()         {}
func (*R500) listUserRes()              {}
func (*R500) readPasswordTokenRes()     {}
func (*R500) readPasswordTokenUserRes() {}
func (*R500) readUserRes()              {}
func (*R500) updatePasswordTokenRes()   {}
func (*R500) updateUserRes()            {}

type UpdatePasswordTokenReq struct {
	Hash      OptString   `form:"hash"`
	CreatedAt OptDateTime `form:"created_at"`
	User      OptInt      `form:"user"`
}

// GetHash returns the value of Hash.
func (s *UpdatePasswordTokenReq) GetHash() OptString {
	return s.Hash
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UpdatePasswordTokenReq) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUser returns the value of User.
func (s *UpdatePasswordTokenReq) GetUser() OptInt {
	return s.User
}

// SetHash sets the value of Hash.
func (s *UpdatePasswordTokenReq) SetHash(val OptString) {
	s.Hash = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UpdatePasswordTokenReq) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUser sets the value of User.
func (s *UpdatePasswordTokenReq) SetUser(val OptInt) {
	s.User = val
}

type UpdateUserReq struct {
	Name     OptString `form:"name"`
	Email    OptString `form:"email"`
	Password OptString `form:"password"`
	Verified OptBool   `form:"verified"`
	Owner    []int     `form:"owner"`
}

// GetName returns the value of Name.
func (s *UpdateUserReq) GetName() OptString {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UpdateUserReq) GetEmail() OptString {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *UpdateUserReq) GetPassword() OptString {
	return s.Password
}

// GetVerified returns the value of Verified.
func (s *UpdateUserReq) GetVerified() OptBool {
	return s.Verified
}

// GetOwner returns the value of Owner.
func (s *UpdateUserReq) GetOwner() []int {
	return s.Owner
}

// SetName sets the value of Name.
func (s *UpdateUserReq) SetName(val OptString) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UpdateUserReq) SetEmail(val OptString) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *UpdateUserReq) SetPassword(val OptString) {
	s.Password = val
}

// SetVerified sets the value of Verified.
func (s *UpdateUserReq) SetVerified(val OptBool) {
	s.Verified = val
}

// SetOwner sets the value of Owner.
func (s *UpdateUserReq) SetOwner(val []int) {
	s.Owner = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID        int       `form:"id"`
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserCreate) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UserCreate) GetEmail() string {
	return s.Email
}

// GetVerified returns the value of Verified.
func (s *UserCreate) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserCreate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserCreate) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UserCreate) SetEmail(val string) {
	s.Email = val
}

// SetVerified sets the value of Verified.
func (s *UserCreate) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserCreate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID        int       `form:"id"`
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserList) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UserList) GetEmail() string {
	return s.Email
}

// GetVerified returns the value of Verified.
func (s *UserList) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserList) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserList) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UserList) SetEmail(val string) {
	s.Email = val
}

// SetVerified sets the value of Verified.
func (s *UserList) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/User_OwnerList
type UserOwnerList struct {
	ID        int       `form:"id"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *UserOwnerList) GetID() int {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserOwnerList) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserOwnerList) SetID(val int) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserOwnerList) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID        int       `form:"id"`
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserRead) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UserRead) GetEmail() string {
	return s.Email
}

// GetVerified returns the value of Verified.
func (s *UserRead) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserRead) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserRead) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UserRead) SetEmail(val string) {
	s.Email = val
}

// SetVerified sets the value of Verified.
func (s *UserRead) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserRead) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID        int       `form:"id"`
	Name      string    `form:"name"`
	Email     string    `form:"email"`
	Verified  bool      `form:"verified"`
	CreatedAt time.Time `form:"created_at"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() int {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserUpdate) GetName() string {
	return s.Name
}

// GetEmail returns the value of Email.
func (s *UserUpdate) GetEmail() string {
	return s.Email
}

// GetVerified returns the value of Verified.
func (s *UserUpdate) GetVerified() bool {
	return s.Verified
}

// GetCreatedAt returns the value of CreatedAt.
func (s *UserUpdate) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val int) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserUpdate) SetName(val string) {
	s.Name = val
}

// SetEmail sets the value of Email.
func (s *UserUpdate) SetEmail(val string) {
	s.Email = val
}

// SetVerified sets the value of Verified.
func (s *UserUpdate) SetVerified(val bool) {
	s.Verified = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *UserUpdate) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

func (*UserUpdate) updateUserRes() {}
